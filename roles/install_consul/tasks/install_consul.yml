---

- name: Download Consul binary
  unarchive:
    src:  "{{ consul_dist }}"
    remote_src: yes
    dest: /bin/
    owner: root
    group: root
    mode: '0755'
    
- name: Run autocomplete-install for consul
  command: /bin/consul -autocomplete-install
  register: result
  failed_when:
    - '"Error executing CLI" not in result.stderr'
 
- name: Create consul-related folders
  file: 
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0755'
    state: directory
  loop: 
    - /etc/consul.d
    - /var/consul/data

- name: Create Consul encrypt key
  command: consul keygen
  register: consul_keygen_key

- name: Copy consul config template
  template:
    src: config.j2.json
    dest: /etc/consul.d/config.json
    mode: '0755'
  
- name: Copy consul systemd template
  template:
    src: consul.service.j2
    dest: /etc/systemd/system/consul.service
    mode: '0644'
    force: yes

- name: Delete old files and dirs (if exists)
  file:
    state: absent
    path: "{{ item }}"
  loop:
    - "{{ ssl_dir }}"
    - "{{ ca_dir }}"

- name: Create SSL-related dirs and files
  file:
    state: "{{ item.types }}"
    path: "{{ item.ssl_dirs }}"
    mode: "{{ item.ssl_modes }}"
  loop:
   - { types: "directory" , ssl_dirs: "{{ ssl_dir }}" , ssl_modes: '0755' }
   - { types: "directory" , ssl_dirs: "{{ ca_dir }}" , ssl_modes: '0755' }
   - { types: "touch" , ssl_dirs: "{{ ca_dir }}/serial" , ssl_modes: '0755' }
   - { types: "touch" , ssl_dirs: "{{ ca_dir }}/certindex" , ssl_modes: '0755' }
  
- shell: echo "000a" > "{{ ca_dir }}/serial"

- template:
    src: "{{ item.template }}"
    dest: "{{ item.dest }}"
    mode: '0644'
  loop:
    - { template: "root-csr.j2.conf", dest: "{{ ca_dir }}/root-csr.conf" }
    - { template: "wild-csr.j2.conf", dest: "{{ ca_dir }}/wild-csr.conf" }
    - { template: "myca.j2.conf", dest: "{{ ca_dir }}/myca.conf" }
    
- name: Create a Self-Signed Root Certificate
  command: | 
    openssl req -x509 -newkey rsa:2048 \
    -days 3650 -nodes \
    -out "{{ ca_dir }}/ca.cert" \
    -keyout "{{ ca_dir }}/privkey.pem" \
    -config "{{ ca_dir }}/root-csr.conf"

- name: Create a Wildcard Certificate Signing Request
  command: | 
    openssl req -newkey rsa:2048 \
    -nodes \
    -out "{{ ca_dir }}/consul.csr" \
    -keyout "{{ ca_dir }}/consul.key" \
    -config "{{ ca_dir }}/wild-csr.conf"
    
- name: Sign the Certificate Signing Request to Generate a Certificate
  command: | 
    openssl ca -batch \
    -notext -in "{{ ca_dir }}/consul.csr" \
    -out "{{ ca_dir }}/consul.cert" \
    -config "{{ ca_dir }}/myca.conf"

- name: Copy all files to ssl_dir
  become: yes
  become_user: root
  copy:
    src: "{{ ca_dir }}/{{ item }}"
    dest: "{{ ssl_dir }}"
  loop:
    - ca.cert
    - consul.cert
    - consul.key
    
- name: Remove certs and keys from ssl_dir
  become: yes
  become_user: root  
  file:
    state: absent
    path: "{{ ca_dir }}/{{ item }}"
  loop:
    - ca.cert
    - consul.cert
    - consul.key 
    
- name: Run consul through systemctl
  systemd:
    state: restarted
    daemon_reload: yes
    name: consul





